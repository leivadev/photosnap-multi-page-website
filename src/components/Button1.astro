---
interface Props {
    type: 'button' | 'submit' | 'reset';
    color: 'dark' | 'light';
    text: string;
}

const { type, color, text } = Astro.props;
---

<button type={type} class={`${color === 'dark' ? 'dark-button' : 'light-button'} textPrimary`}>
    {text}
</button>

<style>

    button {
        border: none;
        padding: 0.75rem 1.5rem;
    }

    button:hover {
        cursor: pointer;
    }

    .textPrimary {
        letter-spacing: 0.15rem;
        font-size: 0.94rem;
    }

    .dark-button {
        color: var(--white-color);
        background-color: var(--black-color);
    }

    .dark-button:hover {
        background-color: var(--light-gray-color);
        color: var(--black-color);
    }

    .light-button {
        color: var(--black-color);
        background-color: var(--white-color);
    }

    .light-button:hover {
        background-color: var(--black-color);
        color: var(--white-color);
    }

    @media only screen and (min-width: 481px) {
        .textPrimary {
            letter-spacing: 0.125rem;
            font-size: 0.75rem;
        }
    }
</style>
